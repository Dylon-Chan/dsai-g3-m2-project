version: 2

models:
  - name: fact_orders
    description: "Fact table for item."
    columns:
    - name: order_id
      tests:
        - dbt_expectations.expect_column_values_to_be_of_type:
            column_name: order_id
            column_type: string
    - name: order_status
      tests:
        - dbt_expectations.expect_column_values_to_be_in_set:
            value_set: ['delivered', 'processing', 'shipped', 'invoiced', 'canceled', 'approved', 'unavailable']
            config:
              severity: error
              mostly: 1.0  # 100% of rows must match
        
    - name: order_purchase_timestamp
      tests:
        - dbt_expectations.expect_column_values_to_be_between:
            min_value: "TIMESTAMP('2015-01-01 00:00:00 UTC')"  # Add a reasonable min date
            max_value: "{{ dbt.current_timestamp() }}"    
    - name: num_items
      tests:
        - dbt_expectations.expect_column_values_to_be_between:
            min_value: 1  # Must be > 0
            max_value: 1000  # Add a reasonable upper limit
            config:
              severity: error
        
    - name: total_order_revenue
      tests:
        - dbt_expectations.expect_column_values_to_be_between:
            min_value: 0.01  # Must be > 0
            max_value: 1000000  # Add a reasonable upper limit
            config:
              severity: error
        
    - name: avg_item_price_per_order
      tests:
        - dbt_expectations.expect_column_values_to_be_between:
            min_value: 0  # Matches calculation
            max_value: 1000000  # Add a reasonable upper limit
          