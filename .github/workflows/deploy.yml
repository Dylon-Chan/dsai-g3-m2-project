name: Deploy DAG and DBT Files to GCP
run-name: ${{ github.actor }} is uploading the data pipeline files to GCP.

# The workflow will be triggered on push events to the "main" branch, which will be done when a pull request is merged into the "main" branch.
on:
  push:
    branches: [ main ]

# Define permissions for this workflow. It is a security measure to limit access.  
permissions:
  id-token: write # This is required for requesting the JWT
  actions: read # Permission to read actions.
  contents: read # Permission to read contents.

jobs:

  # The pre-deploy job just prints the type of event and branch that triggered the workflow
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event on ${{ github.ref_name }} branch."

  # This job handles deployment to the GCP
  deploy:
    runs-on: ubuntu-latest
    needs: [ pre-deploy ]   # This job depends on the completion of the 'pre-deploy' job.
    name: Deploy to GCP
    env:
      environment: ${{ github.ref_name }}  # Specify the environment to deploy
    steps:

      # Checkout the latest code from the repository
      - name: Checkout repo code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up GCP auth by using OIDC authentication which are stored in the Github Actions Secrets
      - name: Authenticate to GCP via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          service_account: ${{ secrets.service_account }}
      
      # Upload DAG Python files to Composer GCS Bucket
      - name: Upload DAG files
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'gcp-composer/dags'
          destination: 'composer-brazilian-ecommerce-bucket/dags'
          parent: false
          process_gcloudignore: false
      
      # Upload DBT files to Composer GCS Bucket
      - name: Upload DBT files
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'e-commerce-dbt'
          destination: 'composer-brazilian-ecommerce-bucket/data'
          process_gcloudignore: false